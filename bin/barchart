#!/usr/bin/env ruby

require 'rubygems'

Row = Struct.new(:key, :value)

rows = STDIN.map do |row|
  key, value = row.split('|')
  Row.new(key.strip, value.to_f)
end

max_value = rows.map(&:value).max
min_value = rows.map(&:value).min
range = max_value - min_value

min_value -= range * 0.1
range = max_value - min_value

max_length = [rows.map { |r| r.key.length }.max, 30].min
value_characters = 80 - max_length

scale = range.zero? ? 0 : (value_characters / range).round

format = "%#{max_length}s [%#{max_value.to_s.length}.1f] %s"

rows.each do |row|
  puts format % [ row.key[0...30], row.value, "â–ˆ" * ((row.value - min_value) * scale) ]
end

puts

