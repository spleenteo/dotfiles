[alias]
  # unstage
  unstage = reset HEAD

  # commit
  ci = commit
  c = commit

  # recommit (amend last commit)
  reco = commit --amend

  # undo commit
  unci = reset --soft HEAD^

  # infos
  fame = shortlog -s --
  l = log --graph --decorate --abbrev-commit --date=relative --pretty=format:'%Cred%h%Creset - %Cgreen%cd%Creset - %s%Creset %C(yellow)<%an>%Creset'
  s = status --short
  d = difftool
  dc = diff --cached

  # add and remove all
  aa = add -A .
  # add, interactive mode
  ap = add -p

  # remove untracked files and dirs
  rmuntr = clean -fd

  # show all branches
  branches = !legit branches
  # creates a branch
  newbr = checkout -b
  # checkout a branch
  br = checkout
  # removes a branch
  rmbr = branch -d

  # rebase commits, interactive mode
  rb = rebase --interactive

  # list aliases
  al = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'

  # == Git Legit (https://github.com/kennethreitz/legit)

  # switch <branch>
  # Switches to specified branch. Defaults to current branch. Automatically
  # stashes and unstashes any changes.
  switch = !legit switch \"$@\"

  # sprout [<branch>] <new-branch> ("germogliare")
  # Creates a new branch off of the specified branch. Swiches to it immediately.
  sprout = !legit sprout \"$@\"

  # unpublish <branch>
  # Removes specified branch from the remote.
  unpublish = !legit unpublish \"$@\"

  # harvest [<branch>] <into-branch> ("raccolta")
  # Auto-Merge/Rebase of specified branch changes into the second branch.
  harvest = !legit harvest \"$@\"

  # sync [<branch>]
  # Syncronizes the given branch. Defaults to current branch. Stash, Fetch,
  # Auto-Merge/Rebase, Push, and Unstash. You can only sync published branches.
  sync = !legit sync \"$@\"

  # publish <branch>
  # Publishes specified branch to the remote.
  publish = !legit publish \"$@\"

  # graft <branch> <into-branch> ("trapiantare")
  # Auto-Merge/Rebase of specified branch into the second branch. Immediately
  # removes specified branch. You can only graft unpublished branches.
  graft = !legit graft \"$@\"

[user]
  name = Stefano Verna
  email = stefano.verna@welaika.com

[color]
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = green
  changed = yellow
  untracked = red

[core]
  excludesfile = ~/.gitignore
  editor = vim

[diff]
  tool = opendiff

[difftool]
  prompt = false
